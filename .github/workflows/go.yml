# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches:
      - "*"

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      CGO_ENABLED: 1
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: true

      # Cache Go modules and build cache
      - name: Go Module and Build Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ./_build
            ./scalibr
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum', '**/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-go-build-
            ${{ runner.os }}-go-

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "23.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      # Cache protoc-gen-go installation
      - name: protoc-gen-go Cache
        uses: actions/cache@v3
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-protoc-gen-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-protoc-gen-go-

      - name: Set up protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go

      - name: Build
        run: |
          # Ensure we use cached dependencies
          go mod download
          # Then build using the Makefile
          make

      - name: Test
        run: go test ./extractor/filesystem/containers/dockercomposeimage
